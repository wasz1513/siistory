<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="myboard">
 	<resultMap id="dashboardlist" type="boardDto"> 
	  <id property="board_no" column="board_no" />
	  <result property="board_content" column="board_content"/>
	  <result property="board_writer" column="board_writer"/>
	  <result property="member_no" column="member_no"/>
	  <result property="board_reply_count" column="board_reply_count"/>
	  <result property="board_state" column="board_state"/>
	  <result property="photo" column="photo"/>
	  <result property="board_like" column="board_like"/>
	  <result property="board_like_count" column="board_like_count"/>
		  <collection property="replylist" ofType="replyDto">
		    <id property="reply_no" column="reply_no"/>
		    <result property="reply_content" column="reply_content"/>
		    <result property="reply_writer" column="reply_writer"/>
		    <result property="writer_no" column="writer_no"/>
		    <result property="depth" column="depth"/>
		    <result property="reply_like" column="reply_like"/>
		    <result property="reply_like_count" column="reply_like_count"/>
		  </collection>
	</resultMap>
		
	<select id="getlist" resultMap="dashboardlist" parameterType="int">
 	
        			select 
			* 
		from (
			select 
				bb.*, rr.reply_no, rr.reply_content, rr.reply_writer, rr.writer_no, rr.depth, rr.reply_like,
                (select count(*) from board_like where board_like.board_no = bb.board_no ) as board_like_count,
				(select count(*) from reply where bb.board_no = reply.board_no) as board_reply_count, 
                (select count(*) from reply_like where reply_like.reply_no = rr.reply_no ) as reply_like_count,
				row_number() OVER (PARTITION BY bb.board_no ORDER BY bb.board_no) as rk
				
			from 
			(select b.*,bl.member_no as board_like from board b left outer join (select * from board_like where member_no= #{member_no}) bl on b.board_no = bl.board_no)  bb 
			
			left outer join (select r.*,rl.member_no as reply_like from 
(select * from reply where depth = 0) r left outer join (select * from reply_like where member_no = #{member_no}) rl  on r.reply_no = rl.reply_no) rr
            on bb.board_no = rr.board_no
			)
			where member_no= #{member_no} order by board_wdate desc

	</select>
	
	<select id="getfriendlist" resultMap="dashboardlist" parameterType="map">
 	
        			select 
			* 
		from (
			select 
				bb.*, rr.reply_no, rr.reply_content, rr.reply_writer, rr.writer_no, rr.depth, rr.reply_like,
                (select count(*) from board_like where board_like.board_no = bb.board_no ) as board_like_count,
				(select count(*) from reply where bb.board_no = reply.board_no) as board_reply_count, 
                (select count(*) from reply_like where reply_like.reply_no = rr.reply_no ) as reply_like_count,
				row_number() OVER (PARTITION BY bb.board_no ORDER BY bb.board_no) as rk
				
			from 
			(select b.*,bl.member_no as board_like from board b left outer join (select * from board_like where member_no= #{member_no}) bl on b.board_no = bl.board_no)  bb 
			
			left outer join (select r.*,rl.member_no as reply_like from 
(select * from reply where depth = 0) r left outer join (select * from reply_like where member_no = #{member_no}) rl  on r.reply_no = rl.reply_no) rr
            on bb.board_no = rr.board_no
			)
			where board_writer= #{member_name} and board_state  
			<if test="member_no!=1">
			<![CDATA[<]]> 2 
			</if>
			<if test="member_no==1">
			<![CDATA[<]]> 100
			</if>
			order by board_wdate desc

	</select>
	
	<update id="setprivate" parameterType="boardDto">
		update board set board_state=#{board_state} where board_no=#{board_no}	
	</update>
</mapper>