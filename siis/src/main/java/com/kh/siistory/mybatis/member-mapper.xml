<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 
	namespace : 영역을 부르는 별칭
 	parameterType : 이 명령을 실행하기 위해 필요한 데이터의 형태
 	resultType : 결과물의 형태 (반환값)

	<![CDATA[ sql구문 ]]> : 태그때문에 못쓰는 되는 기호들은 CDATA로 해결이 가능
	
	#{} : 형태를 추론하여 자동으로 따옴표 설정 및 인코딩 처리를 수행
	${} : 값을 있는 그대로 출력하는 명령이므로 주로 "항목:에 사용
		$는 SQL Injection 이라는 해킹공격에 매우 취약하므로 사용에 주의 
-->

<!-- 	<insert id="insert" parameterType="memoDto"> -->
<!-- 		<![CDATA[ -->
<!-- 		insert into memo values(memo_seq.nextval, #{content}, sysdate) -->
<!-- 		]]> -->
<!-- 	</insert> -->
	
<!-- 	<select id="getList" resultType="memoDto"> -->
<!-- 		select * from memo order by no desc -->
<!-- 	</select> -->
	
<!-- 	<select id="search" resultType="memoDto" parameterType="map"> -->
<!-- 		select * from memo  -->
<!-- 		<if test="type !=null and keyword !=null"> -->
<!-- 		where ${type} like '%'||#{keyword}||'%'  -->
<!-- 		</if>		 -->
<!-- 		order by no desc		 -->
<!-- 	</select> -->

<mapper namespace="member">
<!-- 	seq생성 -->
	<select id="seqno" resultType="seqVo">
		select member_seq.nextval seq_no from dual
	</select>
<!-- 	회원가입 -->
	<insert id="regist" parameterType="memberDto">
		insert into member(member_no, email, member_name, member_pw) values(#{member_no}, #{email}, #{member_name}, #{member_pw})
	</insert>
	
<!-- 	회원가입시 member_profile table member_no 설정 -->
	<insert id="regist_profile" parameterType="memberDto">
		insert into member_profile(member_no) values(#{member_no})
	</insert>
	
<!-- 	로그인 -->
	<select id="login" parameterType="memberDto" resultType="memberDto">
		select * from member where email=#{email}
	</select>
	
<!-- 	단일조회 -->
	<select id="getMember" parameterType="int" resultType="memberDto">
		select * from member where member_no=#{member_no}
	</select>
	
<!-- 	단일조회(멤버 전체 정보 / member + member_profile)-->
	<select id="getMemberVo_name" parameterType="string" resultType="memberVo">
		select * from member_member_profile where member_name = #{member_name}
	</select>
	
<!-- 	단일조회(멤버 전체 정보 / member + member_profile) -->
	<select id="getMemberVo_no" parameterType="int" resultType="memberVo">
		select * from member_member_profile where member_no = #{member_no}
	</select>
	
<!-- 	아이디중복검사 -->
	<select id="idcheck" parameterType="string" resultType="int">
		select count(*) from member where email=#{email}
	</select>
	
<!-- 	이메일 인증 입력-->
	<insert id="cert" parameterType="certDto">
		insert into cert values(cert_seq.nextval, #{email}, #{cert}, sysdate)
	</insert>
	
<!-- 	비밀번호 변경 -->
	<update id="changePw" parameterType="memberDto">
		update member set member_pw=#{member_pw} where email=#{email}
	</update>
	
</mapper>