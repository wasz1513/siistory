<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace : 영역을 부르는 별칭 parameterType : 이 명령을 실행하기 위해 필요한 데이터의 형태 resultType 
	: 결과물의 형태 (반환값) <![CDATA[ sql구문 ]]> : 태그때문에 못쓰는 되는 기호들은 CDATA로 해결이 가능 #{} 
	: 형태를 추론하여 자동으로 따옴표 설정 및 인코딩 처리를 수행 ${} : 값을 있는 그대로 출력하는 명령이므로 주로 "항목:에 사용 
	$는 SQL Injection 이라는 해킹공격에 매우 취약하므로 사용에 주의 -->

<!-- <insert id="insert" parameterType="memoDto"> -->
<!-- <![CDATA[ -->
<!-- insert into memo values(memo_seq.nextval, #{content}, sysdate) -->
<!-- ]]> -->
<!-- </insert> -->

<!-- <select id="getList" resultType="memoDto"> -->
<!-- select * from memo order by no desc -->
<!-- </select> -->

<!-- <select id="search" resultType="memoDto" parameterType="map"> -->
<!-- select * from memo -->
<!-- <if test="type !=null and keyword !=null"> -->
<!-- where ${type} like '%'||#{keyword}||'%' -->
<!-- </if> -->
<!-- order by no desc -->
<!-- </select> -->

<mapper namespace="board">
	<insert id="write" parameterType="boardDto">
		insert into board(board_no, board_content, member_no) values(#{board_no}, #{board_content}, #{member_no})
	</insert>
	
	<select id="seqno" resultType="seqVo">
		select board_seq.nextval seq_no from dual
	</select>
	
	<!-- <resultMap type="boardVO" id="getBoardAndReply">
		<result column="board_no" property="board_no"/>
		<result column="member_no" property="member_no"/>
		<result column="board_like_count" property="board_like_count"/>
		<result column="board_read_count" property="board_read_count"/>
		<result column="board_reply_count" property="board_reply_count"/>
		<result column="board_state" property="board_state"/>
		<result column="board_content" property="board_content"/>
		<result column="board_wdate" property="board_wdate"/>
		<collection column="board_no" property="replylist" javaType="list" ofType="replyDto" select="getReplyListByBoard"></collection>
	</resultMap>
	
	<select id="getBoardList" resultMap="getBoardAndReply">
		select * from board order by board_no desc
	</select>
	
	<select id="getReplyListByBoard" resultType="replyDto" parameterType="int">
		select * from reply where board_no=#{board_no} order by reply_no asc
	</select> -->
	
 	<resultMap id="dashboardlist" type="boardDto"> 
	  <id property="board_no" column="board_no" />
	  <result property="board_content" column="board_content"/>
	  <result property="board_writer" column="board_writer"/>
		  <collection property="replylist" ofType="replyDto">
		    <id property="reply_no" column="reply_no"/>
		    <result property="reply_content" column="reply_content"/>
		    <result property="reply_writer" column="reply_writer"/>
		  </collection>
	</resultMap>
	
	<select id="dashboardlist" resultMap="dashboardlist">
		select b.*, r.reply_no, r.reply_content, r.reply_writer from board b left outer join reply r on b.board_no = r.board_no
	</select> 
</mapper>